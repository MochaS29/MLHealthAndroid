version: '3.8'

services:
  # Project Manager Agent
  pm-agent:
    build:
      context: ./mindquest-pm-agent
      dockerfile: Dockerfile
    container_name: mindquest-pm-agent
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - ENVIRONMENT=development
    volumes:
      - ./mindquest-pm-agent/src:/app/src
      - ./mindquest-pm-agent/config:/app/config
      - ./mindquest-pm-agent/reports:/app/reports
      - ./mindquest-pm-agent/data:/app/data
      - ./MindQuestApp:/workspace/MindQuestApp:ro
      - ./MindLabsQuestAndroid:/workspace/MindLabsQuestAndroid:ro
      - ./MindLabsQuestSwiftUI:/workspace/MindLabsQuestSwiftUI:ro
    networks:
      - mindquest-network
    restart: unless-stopped
    command: tail -f /dev/null

  # React Native Dev Server
  react-native-dev:
    build:
      context: ./MindQuestApp
      dockerfile: Dockerfile.dev
    container_name: mindquest-react-native
    ports:
      - "19000:19000"  # Expo
      - "19001:19001"  # Expo
      - "19002:19002"  # Expo
      - "8081:8081"    # Metro
    environment:
      - NODE_ENV=development
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
    volumes:
      - ./MindQuestApp:/app
      - /app/node_modules
      - /app/.expo
    networks:
      - mindquest-network
    stdin_open: true
    tty: true
    command: npm start

  # Android Build Environment
  android-build:
    build:
      context: ./MindLabsQuestAndroid
      dockerfile: Dockerfile
    container_name: mindquest-android-build
    environment:
      - GRADLE_USER_HOME=/gradle-cache
    volumes:
      - ./MindLabsQuestAndroid:/app
      - gradle-cache:/gradle-cache
      - android-sdk:/android-sdk
    networks:
      - mindquest-network
    command: ./gradlew assembleDebug

  # PostgreSQL Database for future features
  postgres:
    image: postgres:15-alpine
    container_name: mindquest-db
    environment:
      - POSTGRES_DB=mindquest
      - POSTGRES_USER=mindquest
      - POSTGRES_PASSWORD=${DB_PASSWORD:-mindquest123}
    ports:
      - "5433:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mindquest-network
    restart: unless-stopped

  # Redis for caching and queues
  redis:
    image: redis:7-alpine
    container_name: mindquest-redis
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - mindquest-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # API Gateway (Future)
  api-gateway:
    build:
      context: ./docker/api-gateway
      dockerfile: Dockerfile
    container_name: mindquest-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://mindquest:${DB_PASSWORD:-mindquest123}@postgres:5432/mindquest
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    networks:
      - mindquest-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: mindquest-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/sites:/etc/nginx/sites-enabled:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - react-native-dev
      - api-gateway
    networks:
      - mindquest-network
    restart: unless-stopped

  # Monitoring with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: mindquest-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - mindquest-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: mindquest-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - mindquest-network
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  gradle-cache:
  android-sdk:
  grafana-data:
  prometheus-data:

networks:
  mindquest-network:
    driver: bridge